// AUTO GENERATED FILE, DO NOT EDIT.
// Generated by `flutter_rust_bridge`@ 1.49.0.
// ignore_for_file: non_constant_identifier_names, unused_element, duplicate_ignore, directives_ordering, curly_braces_in_flow_control_structures, unnecessary_lambdas, slash_for_doc_comments, prefer_const_literals_to_create_immutables, implicit_dynamic_list_literal, duplicate_import, unused_import, prefer_single_quotes, prefer_const_constructors, use_super_parameters, always_use_package_imports, annotate_overrides, invalid_use_of_protected_member, constant_identifier_names

import 'dart:convert';
import 'dart:async';
import 'package:flutter_rust_bridge/flutter_rust_bridge.dart';

abstract class SimpleAudio {
  Future<Player> newStaticMethodPlayer({dynamic hint});

  FlutterRustBridgeTaskConstMeta get kNewStaticMethodPlayerConstMeta;

  Future<void> openMethodPlayer(
      {required Player that, required String path, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kOpenMethodPlayerConstMeta;

  Future<void> playMethodPlayer({required Player that, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kPlayMethodPlayerConstMeta;

  Future<void> pauseMethodPlayer({required Player that, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kPauseMethodPlayerConstMeta;
}

class Player {
  final SimpleAudio bridge;
  final bool isPlaying;

  Player({
    required this.bridge,
    required this.isPlaying,
  });

  static Future<Player> newPlayer(
          {required SimpleAudio bridge, dynamic hint}) =>
      bridge.newStaticMethodPlayer(hint: hint);

  Future<void> open({required String path, dynamic hint}) =>
      bridge.openMethodPlayer(
        that: this,
        path: path,
      );

  Future<void> play({dynamic hint}) => bridge.playMethodPlayer(
        that: this,
      );

  Future<void> pause({dynamic hint}) => bridge.pauseMethodPlayer(
        that: this,
      );
}
