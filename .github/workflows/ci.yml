name: CI

on:
  push:
    branches:
      - "**"
  workflow_dispatch:

jobs:
  rust_lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.ref_name }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          components: rustfmt, clippy
      - name: Format
        run: |
          cd rust
          cargo +nightly fmt --check
          cd ..
      - name: Clippy
        run: |
          cd rust
          cargo +nightly clippy 
          cd ..

  dart_lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.ref_name }}
      - uses: subosito/flutter-action@v2.10.0
        with:
          channel: "stable"
          cache: true
      - name: Format
        run: |
          cd lib/src
          dart format --set-exit-if-changed . 
          cd ../..
      - name: Lint
        run: |
          cd lib/src
          dart analyze --fatal-infos
          cd ../..

  build_linux:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.ref_name }}
      - uses: ./.github/actions/setup_build

      - name: Install Rust -sys dependencies
        run: |
          sudo apt install libasound2-dev
          sudo apt install libdbus-1-dev pkg-config

      - name: Build Linux Library
        run: python ./plugin_tool.py -b linux

  build_android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.ref_name }}
      - uses: ./.github/actions/setup_build

      - name: Build Android Libraries
        run: python ./plugin_tool.py -b android

  build_windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.ref_name }}
      - uses: ./.github/actions/setup_build

      - name: Build Windows Library
        run: python3 .\plugin_tool.py -b windows

  build_macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.ref_name }}
      - uses: ./.github/actions/setup_build

      - name: Build macOS Libraries
        run: python ./plugin_tool.py -b macos

  build_ios:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.ref_name }}
      - uses: ./.github/actions/setup_build

      - name: Build iOS Libraries
        run: python ./plugin_tool.py -b ios
